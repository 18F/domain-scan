import logging

try:
    from phantomas import Phantomas, PhantomasError
except ImportError as ex:
    logging.warn("\nPhantomas not installed.\n")
    raise ex


##
# == pageload ==
#
# Evaluate page laod time information using Phantomas.
##

command = Phantomas.CMD
init = None

def scan(domain, options):
    logging.debug("[%s][pageload]" % domain)

    if not (domain.startswith('http://') or
            domain.startswith('https://')):
        domain = 'http://' + domain

    test = Phantomas(url=domain)
    try:
        results = test.run()
    except PhantomasError as err:
        logging.error("Exception raised when running Phantomas", exc_info=True)
        return None

    yield [ results.get_metric(metric)
            for metric in interesting_metrics ]

# All of the available metrics are listed here:
# https://www.npmjs.com/package/phantomas#metrics

# There are many other interesting metrics generated by Phantomas. For now,
# we'll just return some related to page load performance...
interesting_metrics = [
        'requests',
        'httpsRequests',
        'timeToFirstByte',
        'timeToLastByte',
        'httpTrafficCompleted',
        'domContentLoaded',
        'domComplete',
        'timeBackend',
        'timeFrontend',
    ]

headers = interesting_metrics
